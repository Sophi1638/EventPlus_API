// <auto-generated />
using System;
using EventPlus_.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventPlus.Migrations
{
    [DbContext(typeof(Eventos_Context))]
    [Migration("20250318161257_Event_Plus")]
    partial class Event_Plus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventPlus.Domains.Evento", b =>
                {
                    b.Property<Guid>("EventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataEvento")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<Guid?>("InstituicaoID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<Guid?>("TipoEventoID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EventoId");

                    b.HasIndex("InstituicaoID");

                    b.HasIndex("TipoEventoID");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("EventPlus.Domains.Presenca", b =>
                {
                    b.Property<Guid>("PresencaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Situacao")
                        .HasColumnType("BIT");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PresencaId");

                    b.HasIndex("EventoId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("Presenca");
                });

            modelBuilder.Entity("EventPlus.Domains.TipoEvento", b =>
                {
                    b.Property<Guid>("TipoEventoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("TipoEventoID");

                    b.ToTable("TipoEvento");
                });

            modelBuilder.Entity("EventPlus.Domains.TipoUsuario", b =>
                {
                    b.Property<Guid>("Tipousuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TipoUsuarioName")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Tipousuario");

                    b.ToTable("TipoUsuario");
                });

            modelBuilder.Entity("EventPlus.Domains.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)");

                    b.Property<Guid>("TipoUsuarioID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UsuarioID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("TipoUsuarioID");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("EventPlus_.Domains.Comentario", b =>
                {
                    b.Property<Guid>("ComentarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EventosID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Exibe")
                        .HasColumnType("BIT");

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ComentarioID");

                    b.HasIndex("EventosID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Comentario");
                });

            modelBuilder.Entity("EventPlus_.Domains.Instituicao", b =>
                {
                    b.Property<Guid>("InstituicaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("VARCHAR(14)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("InstituicaoID");

                    b.HasIndex("Cnpj")
                        .IsUnique();

                    b.ToTable("Instituicao");
                });

            modelBuilder.Entity("EventPlus.Domains.Evento", b =>
                {
                    b.HasOne("EventPlus_.Domains.Instituicao", "Instituicao")
                        .WithMany()
                        .HasForeignKey("InstituicaoID");

                    b.HasOne("EventPlus.Domains.TipoEvento", "Tipoevento")
                        .WithMany()
                        .HasForeignKey("TipoEventoID");

                    b.Navigation("Instituicao");

                    b.Navigation("Tipoevento");
                });

            modelBuilder.Entity("EventPlus.Domains.Presenca", b =>
                {
                    b.HasOne("EventPlus.Domains.Evento", "Evento")
                        .WithOne("Presenca")
                        .HasForeignKey("EventPlus.Domains.Presenca", "EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventPlus.Domains.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EventPlus.Domains.Usuario", b =>
                {
                    b.HasOne("EventPlus.Domains.TipoUsuario", "TipoUsuarios")
                        .WithMany()
                        .HasForeignKey("TipoUsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoUsuarios");
                });

            modelBuilder.Entity("EventPlus_.Domains.Comentario", b =>
                {
                    b.HasOne("EventPlus.Domains.Evento", "Eventos")
                        .WithMany()
                        .HasForeignKey("EventosID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventPlus.Domains.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eventos");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EventPlus.Domains.Evento", b =>
                {
                    b.Navigation("Presenca");
                });
#pragma warning restore 612, 618
        }
    }
}
